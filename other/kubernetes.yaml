apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    generation: 1
    labels:
      io.kompose.service: backend
    name: backend
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.kompose.service: backend
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          io.kompose.service: backend
      spec:
        containers:
        - env:
          - name: MEMCACHED_HOST
            value: memcached
          - name: POSTGRES_HOST
            value: postgres
          - name: RABBITMQ_HOST
            value: rabbitmq
          image: mavromat/backend
          imagePullPolicy: Never
          name: backend
          resources: {}
          volumeMounts:
          - mountPath: /root/configs/
            name: backend-volume
        restartPolicy: Always
        volumes:
        - name: backend-volume
          configMap:
            name: artemis-backend
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    generation: 1
    labels:
      io.kompose.service: frontend
    name: frontend
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: frontend
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - env:
          - name: RABBITMQ_HOST
            value: rabbitmq
          - name: POSTGRES_HOST
            value: postgres
          - name: SYSTEM_VERSION
            value: v0.1
          - name: MACHINE_IP
            value: 0.0.0.0
          - name: USER_ROOT_USERNAME
            value: admin
          - name: USER_ROOT_PASSWORD
            value: admin
          - name: USER_ROOT_EMAIL
            value: admin@admin
          - name: POSTGREST_FLASK_HOST
            value: postgrest:3000
          image: mavromat/frontend
          imagePullPolicy: Never
          name: frontend
          resources: {}
          volumeMounts:
          - mountPath: /root/configs/
            name: frontend-volume
        restartPolicy: Always
        volumes:
        - name: frontend-volume
          configMap:
            name: artemis-frontend
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    labels:
      io.kompose.service: memcached
    name: memcached
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: memcached
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: memcached
      spec:
        containers:
        - image: memcached:alpine
          imagePullPolicy: IfNotPresent
          name: memcached
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    generation: 1
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: nginx
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          resources: {}
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: nginx-conf
            subPath: nginx.conf
          - mountPath: /etc/nginx/certs/
            name: nginx-certs
        restartPolicy: Always
        volumes:
        - configMap:
            name: nginx-configuration
          name: nginx-conf
        - configMap:
            name: nginx-certificates
          name: nginx-certs
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    generation: 1
    labels:
      io.kompose.service: postgres
    name: postgres
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: postgres
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: artemis_db
          - name: POSTGRES_PASSWORD
            value: Art3m1s
          - name: POSTGRES_USER
            value: artemis_user
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          name: postgres
        restartPolicy: Always
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: 2018-10-03T14:44:32Z
    generation: 1
    labels:
      io.kompose.service: postgrest
    name: postgrest
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: postgrest
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: postgrest
      spec:
        containers:
        - env:
          - name: PGRST_DB_ANON_ROLE
            value: artemis_user
          - name: PGRST_DB_SCHEMA
            value: public
          - name: PGRST_DB_URI
            value: postgres://artemis_user:Art3m1s@postgres:5432/artemis_db
          image: postgrest/postgrest
          imagePullPolicy: Always
          name: postgrest
        restartPolicy: Always
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -o deploy.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: 2018-10-03T14:44:32Z
    generation: 1
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: rabbitmq
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3-alpine
          imagePullPolicy: IfNotPresent
          name: rabbitmq
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: frontend
    name: frontend
    namespace: default
  spec:
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      io.kompose.service: frontend
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: memcached
    name: memcached
    namespace: default
  spec:
    ports:
    - port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      io.kompose.service: memcached
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: nginx
    name: nginx
    namespace: default
  spec:
    ports:
    - port: 443
      protocol: TCP
      targetPort: 30080
      nodePort: 30080
    selector:
      io.kompose.service: nginx
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: postgres
    name: postgres
    namespace: default
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      io.kompose.service: postgres
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: postgrest
    name: postgrest
    namespace: default
  spec:
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      io.kompose.service: postgrest
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
    namespace: default
  spec:
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      io.kompose.service: rabbitmq
- apiVersion: v1
  data:
    config.yaml: |
      #
      # ARTEMIS Configuration File
      #

      # Start of Prefix Definitions
      prefixes:
          forth_prefix_main: &forth_prefix_main
              - 139.0.0.0/8
              # - 139.0.0.0/8
              # [0.0.0.0/0]
              # [0.0.0.0/0, '::/0']
          forth_prefix_lamda: &forth_prefix_lamda
              139.91.250.0/24
          forth_prefix_vod: &forth_prefix_vod
              139.91.2.0/24
      # End of Prefix Definitions

      # Start of Monitor Definitions
      monitors:
          riperis: ['']
          # bgpstreamlive:
          #  - routeviews
          #  - ris
          # exabgp:
          # - ip: 192.168.1.1
          #   port: 5000
          # - ip: 192.168.5.1
          #   port: 5000
          # bgpstreamhist: /home/vkotronis/Desktop/git_projects/artemis-tool/other/bgpstreamhist/test_dir2
      # End of Monitor Definitions

      # Start of ASN Definitions
      asns:
          forth_asn: &forth_asn
              8522
          grnet_forth_upstream: &grnet_forth_upstream
              5408
          lamda_forth_upstream_back: &lamda_forth_upstream_back
              56910
          vodafone_forth_upstream_back: &vodafone_forth_upstream_back
              12361
      # End of ASN Definitions

      # Start of Rule Definitions
      rules:
      - prefixes:
        - *forth_prefix_main
        origin_asns:
        - *forth_asn
        neighbors:
        - *grnet_forth_upstream
        - *vodafone_forth_upstream_back
        mitigation:
            manual
      - prefixes:
        - *forth_prefix_lamda
        origin_asns:
        - *forth_asn
        neighbors:
        - *lamda_forth_upstream_back
        mitigation:
            manual
      - prefixes:
        - *forth_prefix_vod
        origin_asns:
        - *forth_asn
        neighbors:
        - *vodafone_forth_upstream_back
        mitigation:
            manual
      # End of Rule Definitions
    logging.yaml: |+
      version: 1
      disable_existing_loggers: False
      formatters:
          simple:
              format: '%(module)s - %(asctime)s - %(levelname)s @ %(funcName)s: %(message)s'

      handlers:
          console:
              class: logging.StreamHandler
              level: DEBUG
              formatter: simple
              stream: ext://sys.stdout

          info_file_handler:
              class: logging.handlers.RotatingFileHandler
              level: INFO
              formatter: simple
              filename: logs/info.log
              maxBytes: 10485760 # 10MB
              backupCount: 20
              encoding: utf8

          error_file_handler:
              class: logging.handlers.RotatingFileHandler
              level: ERROR
              formatter: simple
              filename: logs/errors.log
              maxBytes: 10485760 # 10MB
              backupCount: 20
              encoding: utf8

          # syslog_handler:
          #     class: logging.handlers.SysLogHandler
          #     level: DEBUG
          #     formatter: simple
          #     address: [localhost, /dev/log]

      loggers:
          artemis_logger:
              level: INFO
              handlers: [console, info_file_handler]
              propagate: no

      root:
          level: INFO
          handlers: [console, info_file_handler, error_file_handler]

  kind: ConfigMap
  metadata:
    name: artemis-backend
    namespace: default
- apiVersion: v1
  data:
    logging.yaml: |+
      version: 1
      disable_existing_loggers: False
      formatters:
          simple:
              format: '%(module)s - %(asctime)s - %(levelname)s @ %(funcName)s: %(message)s'

      handlers:
          console:
              class: logging.StreamHandler
              level: DEBUG
              formatter: simple
              stream: ext://sys.stdout

          info_file_handler:
              class: logging.handlers.RotatingFileHandler
              level: INFO
              formatter: simple
              filename: logs/info.log
              maxBytes: 10485760 # 10MB
              backupCount: 20
              encoding: utf8

          error_file_handler:
              class: logging.handlers.RotatingFileHandler
              level: ERROR
              formatter: simple
              filename: logs/errors.log
              maxBytes: 10485760 # 10MB
              backupCount: 20
              encoding: utf8

          # syslog_handler:
          #     class: logging.handlers.SysLogHandler
          #     level: DEBUG
          #     formatter: simple
          #     address: [localhost, /dev/log]

      loggers:
          artemis_logger:
              level: INFO
              handlers: [console, info_file_handler]
              propagate: no

      root:
          level: INFO
          handlers: [console, info_file_handler, error_file_handler]

    webapp.cfg: |
      SQLALCHEMY_ECHO = False
      SQLALCHEMY_TRACK_MODIFICATIONS = False
      WEBAPP_PORT = 8000
      BABEL_DEFAULT_LOCALE = 'en'
      BABEL_DEFAULT_TIMEZONE = 'EET'
  kind: ConfigMap
  metadata:
    name: artemis-frontend
    namespace: default
- apiVersion: v1
  data:
    cert.pem: |
      -----BEGIN CERTIFICATE-----
      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
      /RhKCg==
      -----END CERTIFICATE-----
    key.pem: |
      -----BEGIN PRIVATE KEY-----
      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
      i1VRQWKH0Bt4xqbM7a912eTXf/HX5cEh
      -----END PRIVATE KEY-----
  kind: ConfigMap
  metadata:
    name: nginx-certificates
    namespace: default
- apiVersion: v1
  data:
    nginx.conf: |
      worker_processes 1;

      events { worker_connections 1024; }

      http {

          server {
              listen 30080 ssl default_server;
              resolver localhost;
              error_page 497  https://$host:$server_port$request_uri;
              location / {
                  proxy_pass http://frontend:8000/;
                  proxy_redirect off;
                  proxy_set_header Host $host:$server_port;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Ssl on;
              }
              ssl_certificate /etc/nginx/certs/cert.pem;
              ssl_certificate_key /etc/nginx/certs/key.pem;
          }

      }
  kind: ConfigMap
  metadata:
    name: nginx-configuration
    namespace: default
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
