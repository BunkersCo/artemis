{% extends "layout.htm" %}

{% block head %}
    {{super()}}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/index.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/daterangepicker.css') }}">

    
{% endblock %}

{% block page_content %}
    {{super()}}
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Hijacks</h1>
            </div>
        </div>

        <div class="row">

            <div class="col-lg-1 offset-lg-1">
                <p id="display_entries_time"> Select prefix: </p>
            </div>

            <div class="col-lg-2">
                <div class="form-group">
                    <select class="form-control" id="prefixes_selection">
                        <option>All</option>
                        {% for prefix in prefixes %}
                            <option>{{ prefix }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>

            <div class="col-lg-1 offset-lg-4">
                <p id="display_entries_time"> Timewindow: </p>
            </div>
            <div class="col-lg-3">
                
                <div id="timewindow_buttons">
                    <button type="button" id="select_timewindow_all" class="btn btn-outline-primary">All</button>
                    <button type="button" id="select_timewindow_1h" class="btn btn-outline-secondary">1h</button>
                    <button type="button" id="select_timewindow_24h" class="btn btn-outline-secondary">24h</button>
                    <button type="button" id="select_timewindow_48h" class="btn btn-outline-secondary">48h</button>
                    <button type="button" id="select_timewindow_other" class="btn btn-outline-secondary">Custom</button>
                </div>
                <div id="custom_time">
                    <div class="row">
                        <div class="col-lg-10">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <input class="form-control" type="text" name="datetimes"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                
                <table class="table table-striped table-bordered" id="hijacks">
                    <thead>
                        <th>ID</th>
                        <th>Status</th>
                        <th>Prefix</th>
                        <th>Type</th>
                        <th>Hijack AS</th>
                        <th># Peers Seen</th>
                        <th># ASes Infected</th>
                        <th>Time Started</th>
                        <th>More</th>
                    </thead>
                </table>
                
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                </hr>
                <p> <i><a style="color:red" href="#">Ongoing</a> / <a style="color:green" href="#">Resolved</a> / <a style="color:orange" href="#">Ignored</a> / <a style="color:blue" href="#">Under Mitigation</a> </i></p>
            </div>
            <div class="col-lg-6">
                </hr>
                <p class="float-right"><i>Times are shown in your local time zone.</i></p>
            </div>
        </div>
    
{% endblock %}

{% block body %}
    {{super()}}
    {% block scripts %}
        {{super()}}
        <script>
            var table;
            var display_settings = { 'prefixes': null, 'time': null };
            $('#custom_time').hide();

            $('#select_timewindow_all').on('click', function(event) {
                $('#custom_time').hide();
                $('#timewindow_buttons').children().each(function () { $(this).attr('class', 'btn btn-outline-secondary'); });
                $(this).attr('class', 'btn btn-outline-primary');
                display_settings['time'] = null;
                $('#hijacks').DataTable().destroy();
                render_table(display_settings);
            });
            
            $('#select_timewindow_1h').on('click', function(event) {
                $('#custom_time').hide();
                $('#timewindow_buttons').children().each(function () { $(this).attr('class', 'btn btn-outline-secondary'); });
                $(this).attr('class', 'btn btn-outline-primary');
                var now = Math.floor(Date.now() / 1000);
                var start_time = now - (3600 * 1);
                display_settings['time'] = { 'start_time': start_time, 'end_time': now};
                $('#hijacks').DataTable().destroy();
                render_table(display_settings);
            });

            $('#select_timewindow_24h').on('click', function(event) {
                $('#custom_time').hide();
                $('#timewindow_buttons').children().each(function () { $(this).attr('class', 'btn btn-outline-secondary'); });
                $(this).attr('class', 'btn btn-outline-primary');
                var now = Math.floor(Date.now() / 1000);
                var start_time = now - (3600 * 24);
                display_settings['time'] = { 'start_time': start_time, 'end_time': now};
                $('#hijacks').DataTable().destroy()
                render_table(display_settings);
            });

            $('#select_timewindow_48h').on('click', function(event) {
                $('#custom_time').hide();
                $('#timewindow_buttons').children().each(function () { $(this).attr('class', 'btn btn-outline-secondary'); });
                $(this).attr('class', 'btn btn-outline-primary');
                var now = Math.floor(Date.now() / 1000);
                var start_time = now - (3600 * 48);
                display_settings['time'] = { 'start_time': start_time, 'end_time': now};
                $('#hijacks').DataTable().destroy()
                render_table(display_settings);
            });

            $('#select_timewindow_other').on('click', function(event) {
                $('#timewindow_buttons').children().each(function () { $(this).attr('class', 'btn btn-outline-secondary'); });
                $(this).attr('class', 'btn btn-outline-primary');
                $('#custom_time').show();                
            });

            $("#prefixes_selection").change(function () {
                var option = this.value;
                if(option == "All"){
                    display_settings['prefixes'] = null;
                }else{
                    display_settings['prefixes'] = option;
                }
                $('#hijacks').DataTable().destroy()
                render_table(display_settings);
            });


            
            var columns = [
                { data: 'id' },
                { data: 'prefix' },
                { data: 'type' },
                { data: 'hijack_as' },
                { data: 'num_peers_seen' },
                { data: 'num_asns_inf' },
                { data: 'time_started' },
                { data: 'time_last' },
                { data: 'time_ended' },
                { data: 'mitigation_started'},
                { data: 'to_mitigate' }];

            function render_table(settings){
                var parameters = {};

                if(settings['time'] != null && settings['prefixes'] == null){
                    parameters = { 'and': '(time_started.gte.' + settings['time']['start_time'] + ',time_started.lte.' + settings['time']['end_time'] + ')' }
                }else if(settings['time'] == null && settings['prefixes'] != null){
                    parameters = { 'and': '(configured_prefix.eq.' + settings['prefixes'] + ')' }
                }else if(settings['time'] != null && settings['prefixes'] != null){
                    parameters = { 'and': '(time_started.gte.' + settings['time']['start_time'] + ',time_started.lte.' + settings['time']['end_time'] + ',configured_prefix.eq.' + settings['prefixes'] + ')' }
                }
                table = $('#hijacks').DataTable( {
                    "processing": true,
                    "serverSide": true,
                    ajax: function(data, callback, settings) {
                        parameters['offset'] = data.start;
                        parameters['limit'] = data.length;
                        parameters['order'] =  columns[data.order[0].column].data + "." + data.order[0].dir;
                        $.ajax({
                            type: "POST",
                            url: 'https://{{ API_url }}',
                            dataType: "json",
                            dataType: "json",
                            data: { "action": "hijacks", "parameters" : JSON.stringify(parameters) },

                            success: function(data, status, xhr){
                                callback({
                                    recordsTotal: data.total,
                                    recordsFiltered: data.total,
                                    data: data.results
                                });
                            }
                        });
                    },
                    "columns": [
                        { data: 'id' },
                        {   
                            data: function( row, type, val, meta ) {
                                return hijack_status(row)
                            }
                        },
                        { data: 'prefix' },
                        { data: 'type' },
                        { data: 'hijack_as' },
                        { data: 'num_peers_seen' },
                        { data: 'num_asns_inf' },
                        { data: 'time_started',
                            render: function(data, type, row){
                                var stillUtc = moment.unix(data).toDate();
                                return moment(stillUtc).local().format("DD-MM-YYYY HH:mm:ss");
                            }
                        },
                        {
                            data: 'key',
                            render: function(data, type, row){
                                return '<a href="../hijack?key=' + data + '">View</a>'
                            }
                        }
                    ],
                    "columnDefs": [ {
                        "targets": [7],
                        "orderable": false
                        } 
                    ],
                    "language": {
                        "emptyTable": "<img src=\"../../images/checkmark.png\"></img></br><h3>No hijack alerts. Go grab a beer!</h3></br>"
                    }
                });
            }
        
            setInterval( function () {
                table.ajax.reload(null, false);
            }, 5000 );
            
            function hijack_status(data){
                if(data['under_mitigation'] == true){
                    return '<b style="color:blue">Under Mitigation</b>'
                }else if(data['resolved'] == true){
                    return '<b style="color:green">Resolved</b>'
                }else if(data['active'] == true){
                    return '<b style="color:red">Ongoing</b>'
                }else if(data['ignored'] == true){
                    return '<b style="color:orange">Ignored</b>'
                }else{
                    return "Uknown"
                }
            }        
            
            $(document).ready(function(){
                render_table({})
                $('input[name="datetimes"]').daterangepicker({
                    timePicker: true,
                    startDate: moment().startOf('hour'),
                    endDate: moment().startOf('hour').add(32, 'hour'),
                    locale: {
                        format: 'M/DD hh:mm A'
                    }
                },  function(start, end, label) {
                    display_settings['time'] = { 'start_time': moment(start).unix(), 'end_time': moment(end).unix()};
                    $('#hijacks').DataTable().destroy()
                    render_table(display_settings);
                    }
                );

            });

        </script>
        
        <script src="{{ url_for('static', filename='datatable/jquery.dataTables.min.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/jquery.dataTables.min.js') }}"></script>
        <script src="{{ url_for('static', filename='js/moment-with-locales.min.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/datetime-moment.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.js') }}"></script>
        <script src="{{ url_for('static', filename='js/daterangepicker.min.js') }}"></script>
    {% endblock %}
{% endblock %}
