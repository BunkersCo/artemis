{% extends "layout.htm" %}

{% block head %}
    {{super()}}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/index.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/switches.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/codemirror.css') }}">
{% endblock %}

{% block page_content %}
    {{super()}}
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">System</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4">
                <div class="col-lg-12" id="system_modules_monitor">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bell fa-fw"></i> Monitor Module
                        </div>
                        <div class="panel-body">
                            <label class="switch">
                                <input data-toggle="toggle" id="monitor_switch" name="monitor_switch" type="checkbox">
                                <span class="slider round"></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="col-lg-12" id="system_modules_detection">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bell fa-fw"></i> Detection Module
                        </div>
                        <div class="panel-body">
                            <label class="switch">
                                <input data-toggle="toggle" id="detection_switch" name="detection_switch" type="checkbox">
                                <span class="slider round"></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="col-lg-12" id="system_modules_mitigation">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bell fa-fw"></i> Mitigation Module
                        </div>
                        <div class="panel-body">
                            <label class="switch">
                                <input data-toggle="toggle" id="mitigation_switch" name="mitigation_switch" type="checkbox">
                                <span class="slider round"></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Current Configuration
                        <button type="button" id="config_action" class="btn btn-primary btn-sm float-right">Edit</button>
                        <button type="button" id="config_cancel" class="btn btn-warning btn-sm float-right config-cancel-button">Cancel</button>
                    </div>
                    <div class="panel-body">
                        <div id="config_alert_box"></div>

                        <form><textarea id="code_yaml" name="code_yaml"></textarea></form>
                        </br>
                        <div class="row">
                            <div class="col-lg-6">
                                </hr>
                                <div id="conf_timestamp"></div>
                            </div>
                            <div class="col-lg-6">
                                </hr>
                                <p class="float-right"><i>Times are shown in your local time zone <b id="timezone"></b>.</i>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bell fa-fw"></i> Comment for config
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <form><textarea id="code_config_comment_box" name="code_config_comment_box"></textarea></form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


{% endblock %}

{% block body %}
    {{super()}}
    {% block scripts %}
        {{super()}}
        <script>
            var editor = null;
            var comment_editor = null;
            var valid_conf = $('#code_yaml').val();
            var valid_comment = $('#code_config_comment_box').val();

            $('#config_action').on('click', function (event, state) {
                if($(this).hasClass("btn-primary")){
                    $('#config_action').removeClass('btn-primary').addClass('btn-danger');
                    $('#config_cancel').show();
                    $('#config_action').html('Save');
                    editor.options.readOnly = false;
                    comment_editor.options.readOnly = false;
                }else if($(this).hasClass("btn-danger")){
                    var publish_config = JSON.stringify({
                        new_config: editor.getValue(),
                        comment: comment_editor.getValue()
                    });
                    $('#config_action').removeClass('btn-danger').addClass('btn-warning');
                    $('#config_action').html('Pending');
                    submit_new_config(publish_config);
                }
            });

            $('#config_cancel').on('click', function (event, state) {
                if($(this).hasClass("btn-warning")){
                    $(this).hide();
                    editor.setValue(valid_conf);
                    editor.options.readOnly = true;
                    comment_editor.setValue(valid_comment);
                    comment_editor.options.readOnly = true;
                    $('#config_action').removeClass('btn-danger').addClass('btn-primary');
                    $('#config_action').html('Edit');
                }
            });

            function submit_new_config(publish_config){
                fetch("/admin/config",{
                    method: "POST",
                    body: publish_config,
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if(data["status"] == "fail"){
                        var message = '<div class="alert alert-danger alert-dismissible">'
                        message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                        message += data["response"] + '</div>'
                        $('#config_action').removeClass('btn-warning').addClass('btn-danger')
                        $('#config_action').html('Save');
                    }else{
                        var message = '<div class="alert alert-success alert-dismissible">'
                        message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                        message += data["response"] + '</div>'
                        $('#config_cancel').hide();
                        $('#config_action').removeClass('btn-warning').addClass('btn-primary')
                        $('#config_action').html('Edit');
                        // valid_conf = data["config"];
                        // editor.setValue(valid_conf);
                        // if(data["comment"] == null){
                        //     comment_editor.setValue('');
                        // }else{
                        //     comment_editor.setValue(data["comment"]);
                        // }
                        // editor.options.readOnly = true;
                        // comment_editor.options.readOnly = true;
                        // update_config_timestamp();
                    }
                    $("#config_alert_box").html(message);
                })
                .catch(error => console.error(error));
            }

            function render_module_state(data) {
                data = data["view_processes"]
                for (var key in data) {
                    if(data[key]["running"]) {
                        $("#"+data[key]["name"]+"_switch").attr("checked", true)
                    } else {
                        $("#"+data[key]["name"]+"_switch").attr("checked", false)
                    }
                }
            }

            function render_configuration(data) {
                $("#code_yaml").val(data["view_configs"][0]["raw_config"]);
                $("#code_config_comment_box").val(data["view_configs"][0]["comment"]);
                $("#conf_timestamp").html("Last Update: " + transform_date_to_local(data["view_configs"][0]["timestamp"]))
                editor = CodeMirror.fromTextArea($("#code_yaml")[0], {
                    lineNumbers: true,
                    indentUnit: 4,
                    readOnly: true
                });
                editor.setSize("100%", 640);

                comment_editor = CodeMirror.fromTextArea($("#code_config_comment_box")[0], {
                    lineNumbers: true,
                    indentUnit: 4,
                    readOnly: true
                });
                comment_editor.setSize("100%", 140);
            }

            function toggleModule(name) {
                data = JSON.stringify({
                    name: name,
                    state: $("#"+name+"_switch").attr("checked")
                })
                fetch("/actions/modify_state",{
                    method: "POST",
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                })
                .catch(error => console.error(error))

            }

            $(document).ready(() => {
                const ws = new WebSocket('wss://' + window.location.hostname + '/api/graphql', 'graphql-ws');
                ws.addEventListener('open', (event) => {
                    fetch("/jwt/auth", {
                        method: "GET",
                    })
                    .then(response => response.json())
                    .then(data => ws.send(JSON.stringify({
                        type:"connection_init",
                        payload:{
                            headers:{
                                "Content-Type":"application/json",
                                "Authorization":"Bearer " + data['access_token']
                            }
                        }
                    })))
                    .catch(error => console.error(error));
                });
                ws.addEventListener('message', function conn_ack(event) {
                    data = JSON.parse(event.data);
                    if(data.type === 'connection_ack') {
                        ws.removeEventListener('message', conn_ack);
                        fetchBasicProcStatesLive(ws, render_module_state);
                        fetchConfigStatsLive(ws, render_configuration);
                    }
                });
                $('#timezone').html(display_timezone());
            });

            $("#monitor_switch").on("click", () => toggleModule("monitor"));
            $("#detection_switch").on("click", () => toggleModule("detection"));
            $("#mitigation_switch").on("click", () => toggleModule("mitigation"));

        </script>
        <script src="{{ url_for('static', filename='js/custom/graphql.js') }}"></script>
        <script src="{{ url_for('static', filename='js/custom/utils.js') }}"></script>
        <script src="{{ url_for('static', filename='js/codemirror.js') }}"></script>
        <script src="{{ url_for('static', filename='js/yaml.js') }}"></script>
        <script src="{{ url_for('static', filename='js/moment-with-locales.min.js') }}"></script>

    {% endblock %}
{% endblock %}
