{% extends "layout.htm" %}

{% block head %}
    {{super()}}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/index.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/codemirror.css') }}">
{% endblock %}

{% block page_content %}
    {{super()}}
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Viewing Hijack <small id="hijack_status"></small></h1>
                {% if mitigate == True and configured != True %}                                
                <div class="alert alert-warning">
                    <strong>Warning!</strong> The prefix that is related to this hijack does not exist in the current configuration file.
                </div>
                {% endif %}
            </div>
            <div class="col-lg-9">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Hijack Information
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-6">
             
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Hijacker AS:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_hijack_as" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Type:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_type" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b># Peers Seen:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_peers_seen" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b># ASes Infected:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_asns_inf" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Prefix:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Matched:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_matched_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Config:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_config_timestamp" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b>Key:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_key" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Time Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Time Detected:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_detected" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Last Update:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_last_update" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Time Ended:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_ended" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Mitigation Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_mitigation_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Display Peers:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#seenHijackUpdate" aria-expanded="false" aria-controls="seenHijackUpdate">Seen Hijack BGP Update</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 offset-lg-6">
                                          <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#seenHijackWithdraw" aria-expanded="false" aria-controls="seenHijackWithdraw">Seen Hijack BGP Withdrawal</button>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% if current_user.has_roles('admin') %}
            <div class="col-lg-3">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Actions
                        {% if current_user.has_roles('admin') %}
                        <button type="button" id="hijack_seen_button" class="btn btn-primary btn-sm float-right hijack-seen-button">Mark Hijack as <b>seen</b></button>
                        {% endif %}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4 ">
                                <button id="resolved_button" type="button" class="btn btn-success">Resolve</button>
                            </div>
                            <div class="col-lg-4">
                                {% if mitigate == True and configured == True %}
                                <button id="mitigation_button" type="button" class="btn btn-danger">Mitigate</button>
                                {% endif %}
                            </div>
                            <div class="col-lg-4">
                                <button id="ignored_button" type="button" class="btn btn-warning">Ignore</button>
                            </div>
                        </div>
                    </div>
                </div>
                {% endif %}
            {% if current_user.has_roles('user') %}
            <div class="col-lg-3">
            {% endif %}
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Comments
                        {% if current_user.has_roles('admin') %}
                        <button type="button" id="comment_action" class="btn btn-primary btn-sm float-right">Edit</button>
                        {% endif %}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <form><textarea id="code_comment_box" name="code_comment_box"></textarea></form>
                                <div id="comment_alert_box"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 my-1">
                <div class="collapse multi-collapse" id="seenHijackUpdate">
                    Peers Seen Hijack BGP Update:
                    <div class="card card-body" id="seenHijackUpdate_text"></div>
                </div>
            </div>
            <div class="col-lg-6 my-1">
                <div class="collapse multi-collapse" id="seenHijackWithdraw">
                    Peers Seen Hijack BGP Withdrawal:
                    <div class="card card-body" id="seenHijackWithdraw_text">
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Related BGP Updates
                    </div>
                    <div class="panel-body">
                        <table class="table table-striped table-bordered" id="hijack_table">
                            <thead>
                                <th>Timestamp</th>
                                <th>Prefix</th>
                                <th>Origin AS</th>
                                <th>AS Path</th>
                                <th>Peer AS</th>
                                <th>Service</th>
                                <th>Type</th>
                                <th>Status</th>
                                <th>More</th>
                            </thead>
                        </table>
                    </div>
                </div>
                <div class="col-lg-12">
                    </hr>
                    <p class="float-right"><i>Times are shown in your local time zone <b id="timezone"></b>.</i></p>
                </div>
            </div>
        </div>

    
{% endblock %}

{% block body %}
    {{super()}}
    {% block scripts %}
        {{super()}}
        <script>
            var parameters = {};
            var initial_data = {{ data | safe }};
            parameters['hijack_key'] = "cs.{" + initial_data['key'] + "}";
            var fetch_hijack_parameter = "eq." + initial_data['key'];
            var prefix;
            var table;

            function render_table(settings){
                var columns = [
                        { data: 'timestamp' },
                        { data: 'prefix' },
                        { data: 'origin_as' },
                        { data: 'as_path' },
                        { data: 'peer_asn' },
                        { data: 'service' },
                        { data: 'type' },
                        { data: 'hijack_key' }];

                table = $('#hijack_table').DataTable( {
                    "processing": true,
                    "serverSide": true,
                    "searching": false,
                    ajax: function(data, callback, settings) {
                        col_order = columns[data.order[0].column].data + "." + data.order[0].dir
                        parameters["offset"] = data.start;
                        parameters["limit"] = data.length;
                        parameters["order"] = col_order;
                        $.ajax({
                            type: "POST",
                            url: '{{ url_for('proxy_api') }}',
                            dataType: "json",
                            data: { "action": "view_bgpupdates", "parameters" : JSON.stringify(parameters) },

                            success: function(data, status, xhr){
                                callback({
                                    recordsTotal: data.total,
                                    recordsFiltered: data.total,
                                    data: data.results
                                });
                            }
                        });
                    },
                    "columns": [
                        { data: 'timestamp',
                            render: function(data, type, row){
                                return transform_date_to_local(data);
                            } 
                        },
                        { data: 'prefix' },
                        { data: 'origin_as',
                            render: function(data, type, row){
                                return format_origin_as(data);
                            }
                        },
                        { data: 'as_path',
                            render: function(data, type, row){
                                return format_as_path(data);
                            }
                        },
                        { data: 'peer_asn' },
                        { data: 'service',
                            render: function(data, type, row){
                                return format_service(data);
                            }
                        },
                        { data: 'type' },
                        { data: 'handled', 
                            render: function(data, type, row){
                                if(true == data){
                                    return '<img src=\"{{ url_for('static', filename='images/handled.png') }}\" />'
                                }else{
                                    return '<img src=\"{{ url_for('static', filename='images/unhadled.png') }}\"/>'
                                }
                            } 
                        },
                        {
                            "className":      'details-control',
                            "orderable":      false,
                            "data":           null,
                            "defaultContent": ''
                        }
                    ]
                });
                
            }

            $(document).ready(function(){
                render_table(parameters);
                update_hijack_details(initial_data);

                $('#hijack_table tbody').on('click', 'td.details-control', function () {
                    var tr = $(this).closest('tr');
                    var row = table.row(tr);
                    if (row.child.isShown()) {
                        row.child.hide();
                        tr.removeClass('shown');
                    }else {
                        row.child( format(row.data()) ).show();
                        tr.addClass('shown');
                    }
                });

                editor = CodeMirror.fromTextArea(document.getElementById("code_comment_box"), {
                    lineNumbers: true,
                    indentUnit: 4,
                    readOnly: true
                });
                {% if current_user.has_roles('admin') %}
                    editor.setSize("100%", 182);
                {% else %}
                    editor.setSize("100%", 316);
                {% endif %}

                $('#timezone').html(display_timezone());
            });

        
            function format ( d ) {
                var orig_path = "";
                if (d.orig_path != null){
                    orig_path = d.orig_path;
                }

                return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">'+
                    '<tr>'+
                        '<td><b>Prefix:</b></td>'+
                        '<td>'+ d.prefix +'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Origin AS:</b></td>'+
                        '<td>'+format_origin_as(d.origin_as)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>AS Path:</b></td>'+
                        '<td>'+format_as_path(d.as_path)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Peer AS:</b></td>'+
                        '<td>'+d.peer_asn+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Service:</b></td>'+
                        '<td>'+format_service(d.service)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Type:</b></td>'+
                        '<td>'+d.type+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Communities:</b></td>'+
                        '<td>'+format_communities(d.communities)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Timestamp:</b></td>'+
                        '<td>'+transform_date_to_local(d.timestamp)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Original Path:</b></td>'+
                        '<td>'+format_orig_path(d.orig_path)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Hijack Key:</b></td>'+
                        '<td>'+display_hijack_key(d.hijack_key)+'</td>'+
                    '</tr>'+
                    '<tr>'+
                        '<td><b>Hijack:</b></td>'+
                        '<td>'+hijack_key_create_link("{{ url_for('main.display_hijack') }}", d.hijack_key)+'</td>'+
                    '</tr>'+
                '</table>';
            }


            function retrieve_hijack(key){
                $.ajax({
                    type: 'POST',
                    url: '{{ url_for('proxy_api') }}',
                    data: { "action": "view_hijacks", "parameters" : JSON.stringify({ "key": key }) },
                    success: function(result){
                        update_hijack_details(result.results[0]);
                    },
                    dataType: 'json'
                });
            }

            function update_hijack_details(data){
                $( "#hijack_status" ).html( hijack_status(data)) ;
                prefix = data['prefix'];
                $( "#info_key" ).val( data['key'] );
                $( "#info_type" ).val( data['type'] );
                $( "#info_prefix" ).val( data['prefix'] );
                $( "#info_hijack_as" ).val( data['hijack_as'] );
                $( "#info_num_peers_seen" ).val( data['num_peers_seen'] );
                $( "#info_num_asns_inf" ).val( data['num_asns_inf'] );
                $( "#info_time_started" ).val( transform_date_to_local( data['time_started'] ) );
                $( "#info_time_last" ).val( transform_date_to_local( data['time_last'] ) );
                $( "#info_time_ended" ).val( transform_date_to_local( data['time_ended'] ) );
                $( "#info_time_detected" ).val( transform_date_to_local( data['time_detected'] ) );
                $( "#info_mitigation_started" ).val( transform_date_to_local( data['mitigation_started'] ) );
                $( "#info_matched_prefix" ).val( data['configured_prefix'] );
                $( "#info_config_timestamp" ).val( transform_date_to_local( data['timestamp_of_config'] )  );
                $( "#info_last_update" ).val( transform_date_to_local( data['time_last'] )  );
                $( "#code_comment_box").html( data['comment'] );

                $( "#seenHijackUpdate_text").html( data['peers_seen'].join() );
                $( "#seenHijackWithdraw_text").html( data['peers_withdrawn'].join() );

                if(data['resolved'] == true || data['ignored'] == true || data['withdrawn'] == true){
                    $("#resolved_button").prop("disabled", true);
                    $("#mitigation_button").prop("disabled", true);
                    $("#ignored_button").prop("disabled", true);

                }else if(data['under_mitigation'] == true){
                    $("#mitigation_button").prop("disabled", true);
                }
                if(data['seen'] == true){
                    $('#hijack_seen_button').removeClass('btn-primary').addClass('btn-danger');
                    $('#hijack_seen_button').html('Mark Hijack as <b>not seen</b>');
                }
                $('#hijack_seen_button').show();

            }     

            function hijack_status(data){
                if(data['withdrawn'] == true){
                    return '<b style="color:purple">(Withdrawn)</b>'
                }else if(data['under_mitigation'] == true){
                    return '<b style="color:blue">(Under Mitigation)</b>'
                }else if(data['resolved'] == true){
                    return '<b style="color:green">(Resolved)</b>'
                }else if(data['active'] == true){
                    return '<b style="color:red">(Ongoing)</b>'
                }else if(data['ignored'] == true){
                    return '<b style="color:orange">(Ignored)</b>'
                }else{
                    return "Uknown"
                }
            } 

           
            {% if current_user.has_roles('admin') %}
            $( "#resolved_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.resolve_hijack') }}",
                    data: {
                        "hijack_key" : initial_data['key'],
                        "hijack_as": initial_data['hijack_as'],
                        "type_": initial_data['type'],
                        "prefix": initial_data['prefix']
                     },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $( "#mitigation_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.mitigate_hijack') }}",
                    data: { "hijack_key" : initial_data['key'], "prefix" : prefix },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $( "#ignored_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.ignore_hijack') }}",
                    data: {
                        "hijack_key" : initial_data['key'],
                        "hijack_as": initial_data['hijack_as'],
                        "type_": initial_data['type'],
                        "prefix": initial_data['prefix']
                    },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $('#comment_action').on('click', function (event, state) {
                if($(this).hasClass("btn-primary")){
                    $('#comment_action').removeClass('btn-primary').addClass('btn-danger')
                    $('#comment_action').html('Save');
                    editor.options.readOnly = false;
                }else if($(this).hasClass("btn-danger")){
                    var new_comment = {"new_comment": editor.getValue(), "hijack_key" : initial_data['key']};
                    $('#comment_action').removeClass('btn-danger').addClass('btn-warning')
                    $('#comment_action').html('Pending');
                    submit_new_comment(new_comment)
                }
            });


            function submit_new_comment(new_comment){
                $.ajax({
                    type: "POST",
                    url: "{{ url_for('actions.submit_new_comment') }}",
                    data: new_comment,
                    success: function(result){
                        if(result["status"] == "fail"){
                            var message = '<div class="alert alert-danger alert-dismissible">'
                            message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                            message += result["response"] + '</div>'
                            $('#comment_action').removeClass('btn-warning').addClass('btn-danger')
                            $('#comment_action').html('Save');

                        }else{
                            var message = '<div class="alert alert-success alert-dismissible">'
                            message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                            message += result["response"] + '</div>'
                            $('#comment_action').removeClass('btn-warning').addClass('btn-primary')
                            $('#comment_action').html('Edit');
                            editor.setValue(result["data"])
                            editor.options.readOnly = true;
                        }
                        $("#comment_alert_box").html(message)
                    },
                    dataType: "json"
                });
            }

            

            $('#hijack_seen_button').on('click', function (event, state) {
                if($(this).hasClass("btn-primary")){
                    submit_seen(true);
                }else if($(this).hasClass("btn-danger")){
                    submit_seen(false);
                }
            });


            function submit_seen(state){
                $.ajax({
                    type: "POST",
                    url: "{{ url_for('actions.submit_hijack_seen') }}",
                    data: { "hijack_key" : initial_data['key'], "state" : state },
                    success: function(result){
                        if(result["status"] == "success"){
                            if(state == true){
                                $('#hijack_seen_button').removeClass('btn-primary').addClass('btn-danger');
                                $('#hijack_seen_button').html('Mark Hijack as <b>not seen</b>');
                            }else{
                                $('#hijack_seen_button').removeClass('btn-danger').addClass('btn-primary');
                                $('#hijack_seen_button').html('Mark Hijack as <b>seen</b>');
                            }   
                        }
                    },
                    dataType: "json"
                });
            }
            {% endif %}
        </script>
        <script src="{{ url_for('static', filename='js/custom/utils.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/jquery.dataTables.min.js') }}"></script>
        <script src="{{ url_for('static', filename='js/moment-with-locales.min.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/datetime-moment.js') }}"></script>
        <script src="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.js') }}"></script>
        <script src="{{ url_for('static', filename='js/codemirror.js') }}"></script>
        <script src="{{ url_for('static', filename='js/textile.js') }}"></script>
    {% endblock %}
{% endblock %}


