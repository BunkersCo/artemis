version: '3'
services:
    artemis_backend:
        build: ./backend/
        environment:
            RABBITMQ_HOST: rabbitmq
            MEMCACHED_HOST: memcached
            POSTGRES_HOST: postgres
            DATABASE_NAME: artemis_db
            DATABASE_USER: artemis_user
            DATABASE_HOST: postgres
            DATABASE_PASSWORD: Art3m1s
        depends_on:
            - rabbitmq
            - memcached
            - postgres
            # - syslog
        volumes:
            - ./backend/:/root/
        networks:
            - rabbitmq
            - memcached
            - postgres
            # - syslog
            # - exabgp

    # grafana:
    #     image: grafana/grafana
    #     restart: always
    #     ports:
    #         - 8001:3000
    #     networks:
    #         - rabbitmq
    #         - postgres
    artemis_frontend:
        build: ./frontend/
        environment:
            RABBITMQ_HOST: rabbitmq
            POSTGRES_HOST: postgres
            # SYSLOG_HOST: "syslog:514"
            SYSTEM_VERSION: "v0.1"
            MACHINE_IP: "0.0.0.0"
            USER_ROOT_USERNAME: "admin"
            USER_ROOT_PASSWORD: "admin"
            USER_ROOT_EMAIL: "admin@admin"
            POSTGREST_FLASK_HOST: "postgrest:3000"
        expose:
            - 8000
        volumes:
            - ./frontend/:/root/
            - ./frontend/db/:/etc/webapp/db/
        depends_on:
            - rabbitmq
            - postgres
            - postgrest
            # - syslog
            - artemis_backend
        networks:
            - rabbitmq
            - postgres
            - postgrest
            # - syslog
            - nginx
    nginx:
        image: nginx:latest
        container_name: production_nginx
        environment:
            ARTEMIS_FRONTEND_HOST: artemis_frontend
            POSTGREST_HOST: postgrest
        depends_on:
            - artemis_frontend
            - postgrest
        volumes:
            - ./frontend/webapp/configs/nginx.conf:/etc/nginx/nginx.conf
            - ./frontend/webapp/configs/certs/:/etc/nginx/certs/
        ports:
            - 443:443
        expose:
            - 443
        networks:
            - artemis_frontend
            - postgrest
        restart: always
    # syslog:
    #     image: "mumblepins/syslog-ng-alpine"
    #     restart: always
    #     networks:
    #         - syslog
    rabbitmq:
        image: "rabbitmq:3-alpine"
        restart: always
        networks:
            - rabbitmq
        expose:
            - 5672
    memcached:
        image: "memcached:alpine"
        restart: always
        networks:
            - memcached
        expose:
            - 11211
    postgres:
        image: "postgres:alpine"
        restart: always
        environment:
            POSTGRES_DB: artemis_db
            POSTGRES_USER: artemis_user
            POSTGRES_PASSWORD: Art3m1s
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
        networks:
            - postgres
        expose:
            - 5432
    postgrest:
        image: "postgrest/postgrest"
        restart: always
        expose:
            - 3000
        networks:
            - postgres
            - postgrest
        depends_on:
            - postgres
            - artemis_backend
        environment:
            PGRST_DB_URI: postgres://artemis_user:Art3m1s@postgres:5432/artemis_db
            PGRST_DB_SCHEMA: public
            PGRST_DB_ANON_ROLE: artemis_user
    # exabgp_monitor:
    #     container_name: exabgp_monitor
    #     image: mavromat/exabgp-monitor
    #     restart: always
    #     networks:
    #         - exabgp
    #     ports:
    #         - 179:179
    #     environment:
    #         LOCAL_HOST: <LOCAL_IP_ADDRESS>
    #         LOCAL_AS: <LOCAL_AND_PEER_ASN>
    #         REMOTE_HOST: <PEER_IP_ADDRESS>

networks:
    # syslog:
    rabbitmq:
    memcached:
    postgres:
    postgrest:
    nginx:
    artemis_frontend:
    # exabgp:
