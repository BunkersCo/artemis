version: '3'
services:
    backend:
        build: ./backend/
        container_name: backend
        environment:
            RABBITMQ_HOST: rabbitmq
            MEMCACHED_HOST: memcached
            POSTGRES_HOST: postgres
            DATABASE_NAME: artemis_db
            DATABASE_USER: artemis_user
            DATABASE_HOST: postgres
            DATABASE_PASSWORD: Art3m1s
        depends_on:
            - rabbitmq
            - memcached
            - postgres
            # - syslog
        volumes:
            - ./backend/configs/:/etc/artemis/
            - ./backend/:/root/
        networks:
            - rabbitmq
            - memcached
            - postgres
            # - syslog
            # - exabgp
    # grafana:
    #     image: grafana/grafana
    #     restart: always
    #     ports:
    #         - 8001:3000
    #     networks:
    #         - rabbitmq
    #         - postgres
    frontend:
        build: ./frontend/
        container_name: frontend
        environment:
            RABBITMQ_HOST: rabbitmq
            POSTGRES_HOST: postgres
            # SYSLOG_HOST: 'syslog:514'
            SYSTEM_VERSION: v0.1
            MACHINE_IP: 0.0.0.0
            USER_ROOT_USERNAME: admin
            USER_ROOT_PASSWORD: admin123
            USER_ROOT_EMAIL: admin@admin
            POSTGREST_FLASK_HOST: 'postgrest:3000'
        expose:
            - 8000
        volumes:
            - ./frontend/:/root/
            - ./frontend/webapp/configs/:/etc/artemis/
            - ./frontend/db/:/etc/webapp/db/
        depends_on:
            - rabbitmq
            - postgres
            - postgrest
            # - syslog
            - backend
        networks:
            - rabbitmq
            - postgres
            - postgrest
            # - syslog
            - nginx
    nginx:
        image: nginx:latest
        container_name: production_nginx
        environment:
            ARTEMIS_FRONTEND_HOST: frontend
            POSTGREST_HOST: postgrest
        depends_on:
            - frontend
            - postgrest
        volumes:
            - ./frontend/webapp/configs/nginx.conf:/etc/nginx/nginx.conf
            - ./frontend/webapp/configs/certs/:/etc/nginx/certs/
        ports:
            - 80:80
            - 443:443
        expose:
            - 80
            - 443
        networks:
            - frontend
            - postgrest
        restart: always
    # syslog:
    #     image: "mumblepins/syslog-ng-alpine"
    #     restart: always
    #     networks:
    #         - syslog
    rabbitmq:
        image: rabbitmq:3-alpine
        container_name: rabbitmq
        restart: always
        networks:
            - rabbitmq
        expose:
            - 5672
    memcached:
        image: memcached:alpine
        container_name: memcached
        restart: always
        networks:
            - memcached
        expose:
            - 11211
    # postgres:
    #     image: postgres:alpine
    #     container_name: postgres
    #     restart: always
    #     environment:
    #         POSTGRES_DB: artemis_db
    #         POSTGRES_USER: artemis_user
    #         POSTGRES_PASSWORD: Art3m1s
    #     volumes:
    #         - ./postgres-data:/var/lib/postgresql/data
    #     networks:
    #         - postgres
    #     expose:
    #         - 5432
    postgres:
        image: timescale/timescaledb:latest
        container_name: postgres
        restart: always
        environment:
            POSTGRES_DB: artemis_db
            POSTGRES_USER: artemis_user
            POSTGRES_PASSWORD: Art3m1s
        volumes:
            - ./postgres-data-current:/var/lib/postgresql/data
            - ./other/postgres-backup.sh:/etc/periodic/daily/backup
            - ./postgres-data-backup/:/tmp/
        networks:
            - postgres
        expose:
            - 5432
    postgrest:
        image: postgrest/postgrest
        container_name: postgrest
        restart: always
        expose:
            - 3000
        networks:
            - postgres
            - postgrest
        depends_on:
            - postgres
            - backend
        environment:
            PGRST_DB_URI: postgres://artemis_user:Art3m1s@postgres:5432/artemis_db
            PGRST_DB_SCHEMA: public
            PGRST_DB_ANON_ROLE: artemis_user
    # exabgp:
    #     container_name: exabgp
    #      image: mavromat/exabgp-monitor:latest
    #      restart: always
    #      networks:
    #          - exabgp
    #      volumes:
    #          - ./backend/configs/exabgp.conf:/home/config/exabgp.conf


networks:
    # syslog:
    rabbitmq:
    memcached:
    postgres:
    postgrest:
    nginx:
    # exabgp:
    frontend:
