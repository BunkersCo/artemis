version: '2'
services:
    artemis:
        build: .
        container_name: artemis
        hostname: artemis
        environment:
            - RABBITMQ_HOST=rabbitmq
            - MEMCACHED_HOST=memcached
            - POSTGRES_HOST=postgres
        depends_on:
            - rabbitmq
            - memcached
            - postgres
        volumes:
            - ./:/root/
        networks:
            - rabbitmq
            - memcached
            - postgres
        entrypoint: ["./wait-for", "rabbitmq:5672", "-t", "60", "--", "./wait-for", "memcached:11211", "-t", "60",
            "--", "./wait-for", "postgres:5432", "-t", "60", "--", "python3", "artemis.py"]
    rabbitmq:
        image: "rabbitmq:3-alpine"
        container_name: rabbitmq
        hostname: rabbitmq
        restart: always
        networks:
            - rabbitmq
    memcached:
        image: "memcached:alpine"
        container_name: memcached
        hostname: memcached
        restart: always
        networks:
            - memcached
    postgres:
        image: "postgres:alpine"
        container_name: postgres
        hostname: postgres
        restart: always
        environment:
            POSTGRES_DB: artemis_db
            POSTGRES_USER: artemis_user
            POSTGRES_PASSWORD: Art3m1s
        networks:
            - postgres
    postgrest:
        image: "postgrest/postgrest"
        container_name: postgrest
        hostname: postgrest
        restart: always
        ports:
            - "3000:3000"
        networks:
            - postgres
        depends_on:
            - postgres
        environment:
            PGRST_DB_URI: postgres://artemis_user:Art3m1s@postgres:5432/artemis_db
            PGRST_DB_SCHEMA: public
            PGRST_DB_ANON_ROLE: artemis_user

networks:
    rabbitmq:
    memcached:
    postgres:
