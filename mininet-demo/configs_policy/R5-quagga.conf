!
hostname bgp
password sdnip
!
!
! Example from: http://www.macfreek.nl/memory/BGP_Configuration
router bgp 65005
	bgp router-id 5.5.5.5

    ! announced networks
	network 50.0.0.0/8
	network 150.1.5.0/24

	! timers
	timers bgp 1 3

    ! inbound/outbound policy
	neighbor UPSTREAM peer-group
    neighbor UPSTREAM route-map RM-UPSTREAM-IN  in
    neighbor UPSTREAM route-map RM-PROVIDER-OUT out
    neighbor UPSTREAM next-hop-self
    neighbor PEER     peer-group
    neighbor PEER     route-map RM-PEER-IN  in
    neighbor PEER     route-map RM-PROVIDER-OUT out
    neighbor PEER     next-hop-self
    neighbor CUSTOMER peer-group
    neighbor CUSTOMER route-map RM-CUSTOMER-IN  in
    neighbor CUSTOMER next-hop-self
    neighbor MONITOR peer-group
    neighbor MONITOR route-map RM-MONITOR-IN in
    neighbor MONITOR next-hop-self

    ! upstream provider
    neighbor 150.1.5.1 remote-as 65003
    neighbor 150.1.5.1 peer-group UPSTREAM
    neighbor 150.1.5.1 description Transit Provider AS 65003

    ! peer
    ! no peers

    ! customer
    ! no customers

    ! monitors
    neighbor 50.0.0.3 remote-as 65005
    neighbor 50.0.0.3 peer-group MONITOR
    neighbor 50.0.0.3 description Local Exabgp RC

! Route map for upstream providers.
! Block bogon IPs, and
! set low local-preference
route-map RM-UPSTREAM-IN deny 10
    match ip address prefix-list private-ip
route-map RM-UPSTREAM-IN permit 20
    set community 65005:3080 additive
    set local-preference 90
route-map RM-UPSTREAM-IN permit 30

! Route map for peers.
! Block bogon IPs, make entry as coming from upstream using community 3090, and
! set medium local-preference
route-map RM-PEER-IN deny 10
    match ip address prefix-list private-ip
route-map RM-PEER-IN permit 20
    set community 65005:3090 additive
    set local-preference 100
route-map RM-PEER-IN permit 30

! Outgoing filters for peers and transit providers
! Filter routes from other peers (we don't provide transit for them), only announce
! our own routes and customer routes.
route-map RM-PROVIDER-OUT deny 10
    ! filter out route entries learnt from peers and upstream providers
    match community providers
route-map RM-PROVIDER-OUT permit 20
! empty route map entry, make sure all non-matching entries pass this filter

! Route map for customers.
! Block bogon IPs, and set a high local-preference
route-map RM-CUSTOMER-IN deny 10
    match ip address prefix-list private-ip
route-map RM-CUSTOMER-IN permit 20
    set local-preference 110
route-map RM-CUSTOMER-IN permit 30

! Route map for monitors.
! Block all incoming advertisements
route-map RM-MONITOR-IN deny 10

! community list matching route entries learnt from peers and upstream providers
ip community-list standard providers permit 65005:3080
ip community-list standard providers permit 65005:3090
ip community-list standard providers deny

! Prefix list matching private IP ranges, bogons, and other suspicious IP range announcements.
! Any 'permit' here is a match (not really a 'permit') which is BLOCKED in incoming route map.
! Note: The le 32 also filters subnets of these bogon ranges. However, neigbours can still
! announce a large supernet which contains a bogon range (e.g. 169.254.0.0/15). So you likely
! want to do additional per-neighbour filtering, or peer with known bogon black hole servers.
ip prefix-list private-ip description Private ranges, large or small IP ranges
ip prefix-list private-ip permit 0.0.0.0/8 le 32
! no filtering on 10.0.0.0 range for demo network
!ip prefix-list private-ip permit 10.0.0.0/8 le 32
ip prefix-list private-ip permit 127.0.0.0/8 le 32
ip prefix-list private-ip permit 169.254.0.0/16 le 32
ip prefix-list private-ip permit 172.16.0.0/12 le 32
ip prefix-list private-ip permit 192.0.2.0/24 le 32
ip prefix-list private-ip permit 192.168.0.0/16 le 32
ip prefix-list private-ip permit 240.0.0.0/4 le 32
! filter more specifics
ip prefix-list private-ip permit 0.0.0.0/0 ge 25
ip prefix-list private-ip deny any

!

log stdout
